server:
  port: 8000

spring:
  application:
    name: gateway-service
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest
  cloud:
    gateway:
      default-filters:
        - name: GlobalFilter
          args:
            baseMessage: Spring Cloud Gateway Global Filter
            preLogger: true
            postLogger: true
      routes:
        # user-service
        - id: user-service/login
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/login
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*),/$\{segment}
        - id: user-service/sign-up
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/users
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*),/$\{segment}
        - id: user-service/actuator
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/actuator/**
            - Method=GET,POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*),/$\{segment}
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/**
            - Method=GET
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*),/$\{segment}
            - AuthorizationHeaderFilter

        # catalog-service
        - id: catalog-service
          uri: lb://CATALOG-SERVICE
          predicates:
            - Path=/catalog-service/**
          filters:
            - RewritePath=/catalog-service/(?<segment>.*),/$\{segment}

        # order-service
        - id: order-service
          uri: lb://ORDER-SERVICE
          predicates:
            - Path=/order-service/**
          filters:
            - RewritePath=/order-service/(?<segment>.*),/$\{segment}


#        - id: first-service
#          uri: lb://FIRST-SERVICE
#          predicates:
#            - Path=/first-service/**
#          filters:
            #            - AddRequestHeader=first-request, first-request-header2
            #            - AddResponseHeader=first-response, first-response-header2
#            - CustomFilter
#            - name: LoggingFilter
#              args:
#                baseMessage: Hi, Logging
#                preLogger: true
#                postLogger: true
#            - RewritePath=/first-service/(?<segment>.*),/$\{segment}

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    serviceUrl:
      defaultZone: http://127.0.0.1:8761/eureka

management:
  endpoints:
    web:
      exposure:
        include: refresh, health, beans, httptrace, busrefresh, info, prometheus, metrics

---

spring:
  config:
    activate:
      on-profile: dev
  cloud.config.uri: http://config-service:8888
  rabbitmq.host: rabbitmq

eureka:
  client:
    serviceUrl:
      defaultZone: http://discovery-service:8761/eureka